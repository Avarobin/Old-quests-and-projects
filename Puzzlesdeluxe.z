import "std.zh"

bool game1FirstStarted = false;
bool game2FirstStarted = false;

const int buttonHoldWalk = 6;

int game1UnlockedLevels = 1;
int game2UnlockedLevels = 0;

int selectedGame = 0;
int movePress = 0; //1 = up, 2 = right, 3 = down, 4 = left
int movePressTimer = 0;

int aaaTarget = 0;

int cannonCooldownTime = 0;
bool LState = false;
int game1OpeningWipePositionX = 0;
int game1OpeningWipePositionY = 0;
bool startmenu = false;

int game2OpeningWipePositionX = 0;
int game2OpeningWipePositionY = 0;
bool startmenu2 = false;

int playerSwitched = 0;

bool Game1StartMenuSelected = false;
int Game1StartMenuSelectedOption = 0;
int Game1StartMenuColorTimer = 0;
int Game1StartMenuWaitTimer = 0;
bool Game1StartMenuBlocked = false;

bool Game2StartMenuSelected = false;
int Game2StartMenuSelectedOption = 0;
int Game2StartMenuColorTimer = 0;
int Game2StartMenuWaitTimer = 0;
bool Game2StartMenuBlocked = false;

int currentLevel = 0;
int currentBonusLevel = 0;

bool Boss1Dead = false;
bool Game1Dead = false;
int Game1CannonShotPositionX = 0;
int Game1CannonShotPositionY = 0;
int Game1CannonShotDirection = 0;

bool finalLevelComplete = false;

bool oneHundredPercentMessage = false;

global script Active{
    void run(){
        while(true){
            //CHEAT
            //if ( Link->PressEx1 )
            //    game1UnlockedLevels += 5;

            Link->PressMap = false;
            Link->InputMap = false;

            if ( movePress == 0 && Link->PressUp == true ) {
                movePress = 1;
                movePressTimer = 7;
            }
            if ( movePress == 0 && Link->PressRight == true ) {
                movePress = 2;
                movePressTimer = 7;
            }
            if ( movePress == 0 && Link->PressDown == true ) {
                movePress = 3;
                movePressTimer = 7;
            }
            if ( movePress == 0 && Link->PressLeft == true ) {
                movePress = 4;
                movePressTimer = 7;
            }
            if ( movePressTimer > 0 ) {
                movePressTimer --;
                if ( movePressTimer == 0 )
                    movePress = 0;
            }

            if ( cannonCooldownTime > 0 )
                cannonCooldownTime --;

            if ( playerSwitched > 0 )
                playerSwitched --;

            if ( game1UnlockedLevels > 150 )
                game1UnlockedLevels = 150;

            Link->PressStart = false;
            Link->InputStart = false;
            Waitframe();
        }
    }
}

ffc script RMessageScript{
    void run(int m){
        WaitNoAction();
        while(true){
            if ( this->Data == 10 && Link->PressR == true ) {
                Game->PlaySound(65);
                this->Data = 0;
                Screen->Message(m);
            }
            Waitframe();
        }
    }
}

ffc script CurrentLevelGleich1{
    void run(){
        currentLevel = 1;
    }
}

ffc script CurrentBonusLevelGleich1{
    void run(){
        currentBonusLevel = 1;
    }
}

ffc script TitleScreenScript{
    void run(){
        if ( Game->GetCurDMap() != 16 )
            Game->PlaySound(82);
        while(true){
            if ( this->Y == 134 && Link->PressStart == true ) {
                Game->PlaySound(74);
                Waitframes(45);
                if ( currentLevel == 0 )
                    this->Data = 327;
                else
                    this->Data = 323;
            }
            Waitframe();
        }
    }
}

ffc script MainMenuScript{
    void run(){
        bool selected = false;
        int colorTimer = 0;
        int waitTimer = 0;
        while(true){
            if ( selected == false && selectedGame == 0 && (Link->PressLeft == true || Link->PressRight == true) ) {
                Game->PlaySound(79);
                selectedGame = 1;
            }
            else if ( selected == false && selectedGame == 1 && (Link->PressLeft == true || Link->PressRight == true) ) {
                Game->PlaySound(79);
                selectedGame = 0;
            }
            if ( selectedGame == 0 ) {
                this->Data = 340;
                this->X = 64;
                this->Y = 32;
            }
            if ( selectedGame == 1 ) {
                this->Data = 340;
                this->X = 184;
                this->Y = 32;
            }

            if ( (Link->PressA || Link->PressStart) && selectedGame == 0 ) {
                Game->PlaySound(80);
                selected = true;
            }
            else if ( (Link->PressA || Link->PressStart) && selectedGame == 1 && game2UnlockedLevels == 0 ) {
                Game->PlaySound(85);
                Screen->Message(66);
            }
            else if ( (Link->PressA || Link->PressStart) && selectedGame == 1 && game2UnlockedLevels > 0 ) {
                Game->PlaySound(80);
                selected = true;
            }

            if ( waitTimer == 60 && selectedGame == 0 ) {
                if ( game1FirstStarted == true )
                    this->Data = 323;
                else {
                    this->Data = 202;
                    game1FirstStarted = true;
                }
            }
            if ( waitTimer == 60 && selectedGame == 1 ) {
                if ( game2FirstStarted == true )
                    this->Data = 327;
                else {
                    this->Data = 203;
                    game2FirstStarted = true;
                }
            }

            int text[] = "Puzzle Robots";
            Screen->DrawString(5, 68, 44, FONT_GBORACLEP, 1, -1, TF_CENTERED, text, OP_OPAQUE);
            if ( (colorTimer == 2 || colorTimer == 3) && selected == true && selectedGame == 0 )
                Screen->DrawString(5, 68, 44, FONT_GBORACLEP, 5, -1, TF_CENTERED, text, OP_OPAQUE);

            int text2[] = "Bonus Levels";
            Screen->DrawString(5, 188, 44, FONT_GBORACLEP, 1, -1, TF_CENTERED, text2, OP_OPAQUE);
            if ( (colorTimer == 2 || colorTimer == 3) && selected == true && selectedGame == 1 )
                Screen->DrawString(5, 188, 44, FONT_GBORACLEP, 5, -1, TF_CENTERED, text2, OP_OPAQUE);

            int text3[] = "-Select a Game Mode-";
            Screen->DrawString(5, 128, 4, FONT_GBORACLEP, 1, -1, TF_CENTERED, text3, OP_OPAQUE);

            if ( selected == true ) {
                if ( colorTimer == 3 )
                    colorTimer = 0;
                else
                    colorTimer ++;
                waitTimer ++;
            }
            Waitframe();
        }
    }
}

ffc script LevelSelection1Script{
    void run(){
        bool oneHundredPercent = false;
        if ( oneHundredPercentMessage == false ) {
            oneHundredPercent = true;
            int sourceMapooo = 0;
            int sourceScreenooo = 0;
            int sourceDMapooo = 0;
            int okayooo = 1;
            while(okayooo <= 156){
                if ( okayooo >= 1 && okayooo <= 119 ) {
                    sourceMapooo = 1;
                    sourceScreenooo = okayooo - 1;
                    if ( okayooo >= 1 && okayooo <= 29 )
                        sourceDMapooo = 0;
                    if ( okayooo >= 30 && okayooo <= 59 )
                        sourceDMapooo = 5;
                    if ( okayooo >= 60 && okayooo <= 89 )
                        sourceDMapooo = 6;
                    if ( okayooo >= 90 && okayooo <= 119 )
                        sourceDMapooo = 7;
                }
                if ( okayooo >= 120 && okayooo <= 149 ) {
                    sourceMapooo = 5;
                    sourceScreenooo = okayooo - 120;
                    sourceDMapooo = 8;
                }
                if ( okayooo >= 150 ) {
                    sourceMapooo = 5;
                    sourceScreenooo = okayooo - 120;
                    sourceDMapooo = 11;
                }
                if ( Game->GetDMapScreenD(sourceDMapooo, sourceScreenooo, 0) == 0 )
                    oneHundredPercent = false;
                okayooo ++;
            }
            if ( Game->Counter[CR_SCRIPT1] < 6 )
                oneHundredPercent = false;
            if ( Game->Counter[CR_SCRIPT2] < 6 )
                oneHundredPercent = false;
        }
        if ( oneHundredPercent == true ) {
            oneHundredPercentMessage = true;
            Screen->Rectangle(6, 0, -56, 256, 232, 0x08, 1, 0, 0, 0, true, OP_OPAQUE);
            Screen->Message(77);
            WaitNoAction();
        }

        int selectedLevel = game1UnlockedLevels;
        if ( currentLevel != 0 )
            selectedLevel = currentLevel;
        currentLevel = 0;
        int selectionHoldWaitTimer = 0;
        int selectionHoldWaitDirection = 0; //0 = nothing, 1 = left, 2 = right
        int decimalOffset = 0;

        int sourceMap = 0;
        int sourceScreen = 0;
        int sourceDMap = 0;

        bool selected = false;
        int colorTimer = 0;
        int waitTimer = 0;

        bool okay = false;
        while(true){
            if ( game1UnlockedLevels > 1 ) { //bei mehr als einem freigeschaltetem level
                if ( (Link->PressLeft == true || (selectionHoldWaitTimer >= 34 && selectionHoldWaitDirection == 1)) && selected == false ) { //wenn man nach links lenkt
                    Game->PlaySound(79);
                    if ( selectedLevel == 1 ) {
                        if ( game2UnlockedLevels > 0 )
                            selectedLevel = 150 + game2UnlockedLevels;
                        else
                            selectedLevel = game1UnlockedLevels;
                    }
                    else if ( selectedLevel == 151 && game1UnlockedLevels < 150 )
                        selectedLevel = game1UnlockedLevels;
                    else
                        selectedLevel --;
                }
                else if ( (Link->PressRight == true || (selectionHoldWaitTimer >= 34 && selectionHoldWaitDirection == 2)) && selected == false ) { //wenn man nach rechts lenkt
                    Game->PlaySound(79);
                    if ( selectedLevel == game1UnlockedLevels )
                        if ( game2UnlockedLevels == 0 )
                            selectedLevel = 1;
                        else
                            selectedLevel = 151;
                    else if ( selectedLevel == 150 + game2UnlockedLevels )
                        selectedLevel = 1;
                    else
                        selectedLevel ++;
                }
            }
            if ( selectedLevel >= 1 && selectedLevel <= 9 )
                decimalOffset = 0;
            if ( selectedLevel >= 10 && selectedLevel <= 99 )
                decimalOffset = 4;
            if ( selectedLevel >= 100 )
                decimalOffset = 8;

            if ( selectedLevel >= 1 && selectedLevel <= 119 ) {
                sourceMap = 1;
                sourceScreen = selectedLevel - 1;
                if ( selectedLevel >= 1 && selectedLevel <= 29 )
                    sourceDMap = 0;
                if ( selectedLevel >= 30 && selectedLevel <= 59 )
                    sourceDMap = 5;
                if ( selectedLevel >= 60 && selectedLevel <= 89 )
                    sourceDMap = 6;
                if ( selectedLevel >= 90 && selectedLevel <= 119 )
                    sourceDMap = 7;
            }
            if ( selectedLevel >= 120 && selectedLevel <= 149 ) {
                sourceMap = 5;
                sourceScreen = selectedLevel - 120;
                sourceDMap = 8;
            }
            if ( selectedLevel >= 150 ) {
                sourceMap = 5;
                sourceScreen = selectedLevel - 120;
                sourceDMap = 11;
            }

            if ( (Link->PressA == true || Link->PressStart == true) && selected == false ) {
                Game->PlaySound(80);
                selected = true;
            }
            else if ( Link->PressB == true && selected == false ) {
                this->Data = 327;
            }
            else if ( Link->PressL == true && game1UnlockedLevels > 1 && selected == false ) {
                Game->PlaySound(79);
                int formerselected = selectedLevel;
                int freezeprevention = 0;
                if ( selectedLevel == game1UnlockedLevels )
                    if ( game2UnlockedLevels == 0 )
                        selectedLevel = 1;
                    else
                        selectedLevel = 151;
                else if ( selectedLevel == 150 + game2UnlockedLevels )
                    selectedLevel = 1;
                else
                    selectedLevel ++;
                okay = false;
                while(okay==false){
                    if ( selectedLevel >= 1 && selectedLevel <= 119 ) {
                        sourceMap = 1;
                        sourceScreen = selectedLevel - 1;
                        if ( selectedLevel >= 1 && selectedLevel <= 29 )
                            sourceDMap = 0;
                        if ( selectedLevel >= 30 && selectedLevel <= 59 )
                            sourceDMap = 5;
                        if ( selectedLevel >= 60 && selectedLevel <= 89 )
                            sourceDMap = 6;
                        if ( selectedLevel >= 90 && selectedLevel <= 119 )
                            sourceDMap = 7;
                    }
                    if ( selectedLevel >= 120 && selectedLevel <= 149 ) {
                        sourceMap = 5;
                        sourceScreen = selectedLevel - 120;
                        sourceDMap = 8;
                    }
                    if ( selectedLevel >= 150 ) {
                        sourceMap = 5;
                        sourceScreen = selectedLevel - 120;
                        sourceDMap = 11;
                    }
                    if ( Game->GetDMapScreenD(sourceDMap, sourceScreen, 0) == 0 )
                        okay = true;
                    else {
                        if ( selectedLevel == game1UnlockedLevels )
                            if ( game2UnlockedLevels == 0 )
                                selectedLevel = 1;
                            else
                                selectedLevel = 151;
                        else if ( selectedLevel == 150 + game2UnlockedLevels )
                            selectedLevel = 1;
                        else
                            selectedLevel ++;
                    }
                    if ( freezeprevention >= 200 ) {
                        okay = true;
                        selectedLevel = formerselected;
                    }
                    freezeprevention ++;
                }
            }
            else if ( Link->PressR == true && selected == false ) {
                Screen->DrawLayer(5, sourceMap, sourceScreen, 3, 0, 0, 0, OP_OPAQUE);
                Screen->DrawLayer(5, sourceMap, sourceScreen, 0, 0, 0, 0, OP_OPAQUE);
                if ( sourceMap == 5 && sourceScreen == 0x1F )
                    Screen->DrawLayer(5, sourceMap, 0x2F, 1, 0, 0, 0, OP_OPAQUE);
                else
                    Screen->DrawLayer(5, sourceMap, sourceScreen, 1, 0, 0, 0, OP_OPAQUE);
                Screen->DrawLayer(5, sourceMap, sourceScreen, 2, 0, 0, 0, OP_OPAQUE);
                Screen->DrawTile(5, 80, 48, 1906, 6, 4, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //messagebox
                int text3[] = "Saving...";
                Screen->DrawString(5, 128, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, text3, OP_OPAQUE);
                WaitNoAction();
                Game->Save();
                Game->PlaySound(80);
            }

            currentLevel = selectedLevel;

            if ( waitTimer >= 60 && selected == true ) {
                Screen->SetSideWarp(0, sourceScreen, sourceDMap, -1);
                this->Data = 323;
            }

            Screen->DrawLayer(5, sourceMap, sourceScreen, 3, 0, 0, 0, OP_OPAQUE);
            Screen->DrawLayer(5, sourceMap, sourceScreen, 0, 0, 0, 0, OP_OPAQUE);
            if ( sourceMap == 5 && sourceScreen == 0x1F )
                Screen->DrawLayer(5, sourceMap, 0x2F, 1, 0, 0, 0, OP_OPAQUE);
            else
                Screen->DrawLayer(5, sourceMap, sourceScreen, 1, 0, 0, 0, OP_OPAQUE);
            Screen->DrawLayer(5, sourceMap, sourceScreen, 2, 0, 0, 0, OP_OPAQUE);

            Screen->DrawTile(5, 80, 48, 1906, 6, 4, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //messagebox

            int text[] = "Select a Level";
            Screen->DrawString(5, 128, 50, FONT_GBORACLEP, 1, -1, TF_CENTERED, text, OP_OPAQUE);

            Screen->DrawTile(5, 96, 72, 1629, 1, 1, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //left arrow
            Screen->DrawTile(5, 144, 72, 1630, 1, 1, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //right arrow
            if ( selectedLevel <= 150 ) {
                Screen->DrawInteger(5, 126 - decimalOffset, 70, FONT_GBORACLEP, 1, -1, 0, 0, selectedLevel, 0, OP_OPAQUE);
                if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                    Screen->DrawInteger(5, 126 - decimalOffset, 70, FONT_GBORACLEP, 5, -1, 0, 0, selectedLevel, 0, OP_OPAQUE);
            }
            else {
                int letterA[] = "A";
                int letterB[] = "B";
                int letterC[] = "C";
                int letterD[] = "D";
                int letterE[] = "E";
                int letterF[] = "F";
                if ( selectedLevel == 151 ) {
                    Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, letterA, OP_OPAQUE);
                    if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                        Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 5, -1, TF_CENTERED, letterA, OP_OPAQUE);
                }
                if ( selectedLevel == 152 ) {
                    Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, letterB, OP_OPAQUE);
                    if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                        Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 5, -1, TF_CENTERED, letterB, OP_OPAQUE);
                }
                if ( selectedLevel == 153 ) {
                    Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, letterC, OP_OPAQUE);
                    if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                        Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 5, -1, TF_CENTERED, letterC, OP_OPAQUE);
                }
                if ( selectedLevel == 154 ) {
                    Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, letterD, OP_OPAQUE);
                    if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                        Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 5, -1, TF_CENTERED, letterD, OP_OPAQUE);
                }
                if ( selectedLevel == 155 ) {
                    Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, letterE, OP_OPAQUE);
                    if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                        Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 5, -1, TF_CENTERED, letterE, OP_OPAQUE);
                }
                if ( selectedLevel == 156 ) {
                    Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, letterF, OP_OPAQUE);
                    if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                        Screen->DrawString(5, 129, 70, FONT_GBORACLEP, 5, -1, TF_CENTERED, letterF, OP_OPAQUE);
                }
            }

            if ( Game->GetDMapScreenD(sourceDMap, sourceScreen, 0) == 0 ) {
                int text2[] = "Unsolved";
                Screen->DrawString(5, 160, 90, FONT_GBORACLEP, 5, -1, TF_RIGHT, text2, OP_OPAQUE);
            }
            else if ( Game->GetDMapScreenD(sourceDMap, sourceScreen, 0) == 1 ) {
                int text2[] = "Solved";
                Screen->DrawString(5, 160, 90, FONT_GBORACLEP, 10, -1, TF_RIGHT, text2, OP_OPAQUE);
            }

            if ( Link->PressLeft == false && Link->InputLeft == true && Link->InputRight == false ) {
                if ( selectionHoldWaitDirection == 0 || selectionHoldWaitDirection == 2 ) {
                    selectionHoldWaitTimer = 0;
                    selectionHoldWaitDirection = 1;
                }
                else if ( selectionHoldWaitTimer < 34 )
                    selectionHoldWaitTimer ++;
                else if ( selectionHoldWaitTimer == 34 )
                    selectionHoldWaitTimer = 30;
            }
            else if ( Link->PressRight == false && Link->InputRight == true && Link->InputLeft == false ) {
                if ( selectionHoldWaitDirection == 0 || selectionHoldWaitDirection == 1 ) {
                    selectionHoldWaitTimer = 0;
                    selectionHoldWaitDirection = 2;
                }
                else if ( selectionHoldWaitTimer < 34 )
                    selectionHoldWaitTimer ++;
                else if ( selectionHoldWaitTimer == 34 )
                    selectionHoldWaitTimer = 30;
            }
            else
                selectionHoldWaitTimer = 0;

            if ( selected == true ) {
                if ( colorTimer == 3 )
                    colorTimer = 0;
                else
                    colorTimer ++;
                waitTimer ++;
            }

            Link->PressStart = false;
            Link->InputStart = false;
            Waitframe();
        }
    }
}

ffc script LevelSelection2Script{
    void run(){
        int selectedLevel = game2UnlockedLevels;
        if ( currentBonusLevel != 0 )
            selectedLevel = currentBonusLevel;
        currentBonusLevel = 0;
        int selectionHoldWaitTimer = 0;
        int selectionHoldWaitDirection = 0; //0 = nothing, 1 = left, 2 = right
        int decimalOffset = 0;

        int sourceMap = 0;
        int sourceScreen = 0;
        int sourceDMap = 0;

        bool selected = false;
        int colorTimer = 0;
        int waitTimer = 0;

        bool okay = false;
        while(true){
            if ( game2UnlockedLevels > 1 ) { //bei mehr als einem freigeschaltetem level
                if ( (Link->PressLeft == true || (selectionHoldWaitTimer >= 34 && selectionHoldWaitDirection == 1)) && selected == false ) { //wenn man nach links lenkt
                    Game->PlaySound(79);
                    if ( selectedLevel == 1 )
                        selectedLevel = game2UnlockedLevels;
                    else
                        selectedLevel --;
                }
                else if ( (Link->PressRight == true || (selectionHoldWaitTimer >= 34 && selectionHoldWaitDirection == 2)) && selected == false ) { //wenn man nach rechts lenkt
                    Game->PlaySound(79);
                    if ( selectedLevel == game2UnlockedLevels )
                        selectedLevel = 1;
                    else
                        selectedLevel ++;
                }
            }
            if ( selectedLevel >= 1 && selectedLevel <= 9 )
                decimalOffset = 0;
            if ( selectedLevel >= 10 && selectedLevel <= 99 )
                decimalOffset = 4;
            if ( selectedLevel >= 100 )
                decimalOffset = 8;

            sourceMap = 9;
            sourceScreen = selectedLevel - 1;
            sourceDMap = 11;

            if ( (Link->PressA == true || Link->PressStart == true) && selected == false ) {
                Game->PlaySound(80);
                selected = true;
            }
            else if ( Link->PressB == true && selected == false ) {
                this->Data = 327;
            }
            else if ( Link->PressL == true && game2UnlockedLevels > 1 && selected == false ) {
                Game->PlaySound(79);
                int formerselected = selectedLevel;
                int freezeprevention = 0;
                if ( selectedLevel == game2UnlockedLevels )
                    selectedLevel = 1;
                else
                    selectedLevel ++;
                okay = false;
                while(okay==false){
                    if ( Game->GetDMapScreenD(sourceDMap, sourceScreen, 0) == 0 )
                        okay = true;
                    else {
                        if ( selectedLevel == game2UnlockedLevels )
                            selectedLevel = 1;
                        else
                            selectedLevel ++;
                    }
                    if ( freezeprevention >= 200 ) {
                        okay = true;
                        selectedLevel = formerselected;
                    }
                    freezeprevention ++;
                }
            }
            else if ( Link->PressR == true && selected == false ) {
                Screen->DrawLayer(5, sourceMap, sourceScreen, 3, 0, 0, 0, OP_OPAQUE);
                Screen->DrawLayer(5, sourceMap, sourceScreen, 0, 0, 0, 0, OP_OPAQUE);
                Screen->DrawLayer(5, sourceMap, sourceScreen, 1, 0, 0, 0, OP_OPAQUE);
                Screen->DrawLayer(5, sourceMap, sourceScreen, 2, 0, 0, 0, OP_OPAQUE);
                Screen->DrawTile(5, 80, 48, 1906, 6, 4, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //messagebox
                int text3[] = "Saving...";
                Screen->DrawString(5, 128, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, text3, OP_OPAQUE);
                WaitNoAction();
                Game->Save();
                Game->PlaySound(80);
            }

            currentBonusLevel = selectedLevel;

            if ( waitTimer >= 60 && selected == true ) {
                Screen->SetSideWarp(0, sourceScreen, sourceDMap, -1);
                this->Data = 323;
            }

            Screen->DrawLayer(5, sourceMap, sourceScreen, 3, 0, 0, 0, OP_OPAQUE);
            Screen->DrawLayer(5, sourceMap, sourceScreen, 0, 0, 0, 0, OP_OPAQUE);
            Screen->DrawLayer(5, sourceMap, sourceScreen, 1, 0, 0, 0, OP_OPAQUE);
            Screen->DrawLayer(5, sourceMap, sourceScreen, 2, 0, 0, 0, OP_OPAQUE);

            Screen->DrawTile(5, 80, 48, 1906, 6, 4, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //messagebox

            int text[] = "Select a Level";
            Screen->DrawString(5, 128, 50, FONT_GBORACLEP, 1, -1, TF_CENTERED, text, OP_OPAQUE);

            Screen->DrawTile(5, 96, 72, 1629, 1, 1, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //left arrow
            Screen->DrawTile(5, 144, 72, 1630, 1, 1, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //right arrow
            Screen->DrawInteger(5, 126 - decimalOffset, 70, FONT_GBORACLEP, 1, -1, 0, 0, selectedLevel, 0, OP_OPAQUE);
            if ( (colorTimer == 2 || colorTimer == 3) && selected == true )
                Screen->DrawInteger(5, 126 - decimalOffset, 70, FONT_GBORACLEP, 5, -1, 0, 0, selectedLevel, 0, OP_OPAQUE);

            if ( Game->GetDMapScreenD(sourceDMap, sourceScreen, 0) == 0 ) {
                int text2[] = "Unsolved";
                Screen->DrawString(5, 160, 90, FONT_GBORACLEP, 5, -1, TF_RIGHT, text2, OP_OPAQUE);
            }
            else if ( Game->GetDMapScreenD(sourceDMap, sourceScreen, 0) == 1 ) {
                int text2[] = "Solved";
                Screen->DrawString(5, 160, 90, FONT_GBORACLEP, 10, -1, TF_RIGHT, text2, OP_OPAQUE);
            }

            if ( Link->PressLeft == false && Link->InputLeft == true && Link->InputRight == false ) {
                if ( selectionHoldWaitDirection == 0 || selectionHoldWaitDirection == 2 ) {
                    selectionHoldWaitTimer = 0;
                    selectionHoldWaitDirection = 1;
                }
                else if ( selectionHoldWaitTimer < 34 )
                    selectionHoldWaitTimer ++;
                else if ( selectionHoldWaitTimer == 34 )
                    selectionHoldWaitTimer = 30;
            }
            else if ( Link->PressRight == false && Link->InputRight == true && Link->InputLeft == false ) {
                if ( selectionHoldWaitDirection == 0 || selectionHoldWaitDirection == 1 ) {
                    selectionHoldWaitTimer = 0;
                    selectionHoldWaitDirection = 2;
                }
                else if ( selectionHoldWaitTimer < 34 )
                    selectionHoldWaitTimer ++;
                else if ( selectionHoldWaitTimer == 34 )
                    selectionHoldWaitTimer = 30;
            }
            else
                selectionHoldWaitTimer = 0;

            if ( selected == true ) {
                if ( colorTimer == 3 )
                    colorTimer = 0;
                else
                    colorTimer ++;
                waitTimer ++;
            }

            Link->PressStart = false;
            Link->InputStart = false;
            Waitframe();
        }
    }
}

ffc script Game1OpeningWipe{
    void run(){
        WaitNoAction();
        Game1StartMenuBlocked = false;
    }
}

ffc script Game2OpeningWipe{
    void run(){
        for(int invradius=0; invradius<30; invradius++){
            WaitNoAction();
        }
        for(int invradius=0; invradius<256; invradius+=4){
            InvertedCircle(0, 5, game2OpeningWipePositionX+8, game2OpeningWipePositionY+8, invradius, 1, 7);
            Link->PressStart = false;
            Link->InputStart = false;
            Waitframe();
        }
        Game2StartMenuBlocked = false;
    }
}

ffc script Game1{
    void run(){
        this->Flags[FFCF_OVERLAY] = true;
        int playerPositionX = 0;
        int playerPositionY = 0;
        int playerDirection = 1;
        int objectPositionX = 0;
        int objectPositionY = 0;
        int objectType = 0; //0 = nothing, 1 = crate, 2 = stoneblock, 3 = bomb, 4 = starblock, 5 = moonblock, 6 = reflector A, 7 = reflektor B, 8 = reflektor C, 9 = reflektor D, 10 = bad robot, 11 = good robot, 12 = purple crate

        int buttonPressed = 0; //0 = nothing, 1 = up, 2 = right, 3 = down, 4 = left, 5 = A, 6 = B, 7 = L, 8 = R
        int buttonHoldTimer = 0;
        movePress = 0;
        movePressTimer = 0;

        startmenu = false;
        bool okay = true;
        Game1StartMenuBlocked = true;

        Game1Dead = false;
        Boss1Dead = false;

        int cannonshotPositionX = 0;
        int cannonshotPositionY = 0;
        int cannonshotDirection = 0;
        LState = false;
        int denetPosition = 0;
        int teleporterPosition = 0;
        int teleporterTargetPosition = 0;
        for(int i = 0; i < 175; i++){
            SetLayerComboD(4, i, 0);
            if ( Screen->ComboD[i] == 44 ){
                playerPositionX = ComboX(i);
                playerPositionY = ComboY(i);
                playerDirection = 1;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 45 ){
                playerPositionX = ComboX(i);
                playerPositionY = ComboY(i);
                playerDirection = 2;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 46 ){
                playerPositionX = ComboX(i);
                playerPositionY = ComboY(i);
                playerDirection = 3;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 47 ){
                playerPositionX = ComboX(i);
                playerPositionY = ComboY(i);
                playerDirection = 4;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 36 || Screen->ComboD[i] == 37 )
                denetPosition = i;
            if ( GetLayerComboD(1, i) == 104 )
                teleporterPosition = i;
            if ( GetLayerComboD(1, i) == 105 )
                teleporterTargetPosition = i;
            if ( GetLayerComboD(3, i) == 68 || GetLayerComboD(3, i) == 69 )
                SetLayerComboD(3, i, 64);
            if ( GetLayerComboD(1, i) == 127 || GetLayerComboD(1, i) == 131 || GetLayerComboD(1, i) == 135 )
                SetLayerComboD(1, i, 0);
            if ( Screen->ComboD[i] == 86 ) { //skipper
                if ( Screen->D[1] == 0 )
                    Screen->ComboD[i] = 85;
                else
                    Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 397 ) { //star
                if ( Screen->D[2] == 0 )
                    Screen->ComboD[i] = 396;
                else
                    Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 204 )
                Screen->ComboD[i] = 4;
        }
        while(true){
            while(buttonPressed == 0 && Game1Dead == false && Boss1Dead == false){
                if ( Link->PressUp == true || movePress == 1 ) {
                    buttonPressed = 1;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressRight == true || movePress == 2 ) {
                    buttonPressed = 2;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressDown == true || movePress == 3 ) {
                    buttonPressed = 3;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressLeft == true || movePress == 4 ) {
                    buttonPressed = 4;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressA == true ) {
                    buttonPressed = 5;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressB == true ) {
                    buttonPressed = 6;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressL == true ) {
                    buttonPressed = 7;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressR == true ) {
                    buttonPressed = 8;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressStart == true && Game1StartMenuBlocked == false && Boss1Dead == false && Game1Dead == false ) {
                    Game->PlaySound(83);
                    Link->PressStart = false;
                    Link->InputStart = false;
                    buttonHoldTimer = 0;
                    Game1StartMenuSelected = false;
                    Game1StartMenuSelectedOption = 0;
                    Game1StartMenuColorTimer = 0;
                    Game1StartMenuWaitTimer = 0;
                    startmenu = true;
                    while(startmenu == true){
                        Game1StartMenu(0, playerPositionX, playerPositionY, playerDirection);
                        Link->PressStart = false;
                        Link->InputStart = false;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                    Screen->ComboD[111] = 4;
                }
                if ( Link->InputUp == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 1;
                }
                if ( Link->InputRight == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 2;
                }
                if ( Link->InputDown == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 3;
                }
                if ( Link->InputLeft == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 4;
                }
                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
            } //loop end, a button has been pressed
            movePress = 0;
            movePressTimer = 0;
            if ( buttonPressed == 1 ) {
                playerDirection = 1;
                if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 37 ) { //denet
                    Game->PlaySound(69);
                    this->X = playerPositionX;
                    this->Y = playerPositionY-12;
                    this->Data = 38;
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( Screen->ComboD[16] == 420 ) { //final level won
                        finalLevelComplete = true;
                        Screen->D[0] = 1;
                        Screen->SetSideWarp(0, 98, 16, WT_IWARPBLACKOUT);
                        Screen->ComboD[16] = 323;
                        WaitNoAction();
                    }
                    if ( Screen->D[0] == 0 ) {
                        Screen->D[0] = 1;
                        if ( currentLevel < 150 )
                            game1UnlockedLevels ++;
                    }
                    Game1StartMenuSelectedOption = 0;
                    Game1StartMenuSelected = false;
                    Game1StartMenuColorTimer = 0;
                    Game1StartMenuWaitTimer = 0;
                    startmenu = true;
                    while(startmenu == true){
                        Game1StartMenu(1, playerPositionX, playerPositionY, playerDirection);
                        Link->PressStart = false;
                        Link->InputStart = false;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                    Screen->ComboD[111] = 4;
                }
                else if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 160 && cannonCooldownTime == 0 ) { //cannon
                    Game->PlaySound(77);
                    cannonCooldownTime = 60;
                    aaaTarget = ComboAt(playerPositionX, playerPositionY-16);
                    cannonshotPositionX = ComboX(aaaTarget)+8;
                    cannonshotPositionY = ComboY(aaaTarget)+8;
                    cannonshotDirection = 1;
                    okay = false;
                    while(okay == false){
                        if ( cannonshotDirection == 1 )
                            cannonshotPositionY -= 4;
                        if ( cannonshotDirection == 2 )
                            cannonshotPositionX += 4;
                        if ( cannonshotDirection == 3 )
                            cannonshotPositionY += 4;
                        if ( cannonshotDirection == 4 )
                            cannonshotPositionX -= 4;
                        if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY+8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY+8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX-8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX-8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY-8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY-8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX+8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX+8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        if ( cannonshotDirection == 1 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 164, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 2 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 165, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 3 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 166, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 4 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 167, 2, OP_OPAQUE);
                        Game1CannonShotPositionX = cannonshotPositionX;
                        Game1CannonShotPositionY = cannonshotPositionY;
                        if ( cannonshotDirection == 1 )
                            Game1CannonShotDirection = DIR_UP;
                        if ( cannonshotDirection == 2 )
                            Game1CannonShotDirection = DIR_RIGHT;
                        if ( cannonshotDirection == 3 )
                            Game1CannonShotDirection = DIR_DOWN;
                        if ( cannonshotDirection == 4 )
                            Game1CannonShotDirection = DIR_LEFT;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                }
                Game1CannonShotPositionX = 0;
                Game1CannonShotPositionY = 0;
                if ( (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 4 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 190 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 84 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 85 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 396 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 120 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 121 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 122) && (GetLayerComboD(3, ComboAt(playerPositionX, playerPositionY-16)) != 64 || LState == true) ) {
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                }
                else if ( (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 52 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 53 || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 56 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 57 && LState == false) || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 77 || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 92 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 93 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 140 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 141 && LState == false) || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 168 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 169 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 170 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 171 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 176 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 179 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 188 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 189 || ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] >= 404 && Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] <= 414 ) ) && Screen->ComboD[ComboAt(playerPositionX, playerPositionY-32)] == 4 ) {
                    Game->PlaySound(50);
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 52 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 53 )
                        objectType = 1;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 56 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 57 )
                        objectType = 2;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 77 )
                        objectType = 3;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 92 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 93 )
                        objectType = 4;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 140 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 141 )
                        objectType = 5;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 168 )
                        objectType = 6;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 169 )
                        objectType = 7;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 170 )
                        objectType = 8;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 171 )
                        objectType = 9;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 176 )
                        objectType = 10;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 179 )
                        objectType = 11;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 188 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 189 )
                        objectType = 12;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 404 )
                        objectType = 404;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 405 )
                        objectType = 405;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 406 )
                        objectType = 406;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 408 )
                        objectType = 408;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 409 )
                        objectType = 409;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 410 )
                        objectType = 410;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 412 )
                        objectType = 412;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 413 )
                        objectType = 413;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] == 414 )
                        objectType = 414;
                    if ( objectType == 12 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 11 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 78 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 79 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 104 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 105 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 127 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 131 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY-16)) != 135 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 190;
                    else
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 4;
                    objectPositionX = playerPositionX;
                    objectPositionY = playerPositionY-16;
                    playerPositionY -= 1;
                    objectPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 1;
                    objectPositionY -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 2;
                    objectPositionY -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 2;
                    objectPositionY -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 3;
                    objectPositionY -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 3;
                    objectPositionY -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY -= 4;
                    objectPositionY -= 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( objectType == 1 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 52;
                    if ( objectType == 2 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 56;
                    if ( objectType == 3 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 77;
                    if ( objectType == 4 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 92;
                    if ( objectType == 5 ) {
                        if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY-32)] == 4 && GetLayerComboD(3, ComboAt(playerPositionX, playerPositionY-32)) != 64 ) {
                            Game->PlaySound(66);
                            objectType = 0;
                            aaaTarget = ComboAt(playerPositionX, playerPositionY-16);
                            Screen->ComboD[aaaTarget] = 144;
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 4 ) {
                                    if ( Screen->ComboD[aaaTarget-32] == 4 && GetLayerComboD(3, aaaTarget-32) != 64 ) {
                                        aaaTarget -= 16;
                                        Screen->ComboD[aaaTarget] = 148;
                                    }
                                    else {
                                        aaaTarget -= 16;
                                        Screen->ComboD[aaaTarget] = 152;
                                        okay = true;
                                    }
                                }
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 140 )
                                    okay = true;
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                        }
                        else //it could only move 1 tile
                            Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 140;
                    }
                    if ( objectType == 6 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 168;
                    if ( objectType == 7 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 169;
                    if ( objectType == 8 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 170;
                    if ( objectType == 9 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 171;
                    if ( objectType == 10 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 176;
                    if ( objectType == 11 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 179;
                    if ( objectType == 12 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 188;
                    if ( objectType == 404 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 404;
                    if ( objectType == 405 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 405;
                    if ( objectType == 406 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 406;
                    if ( objectType == 408 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 408;
                    if ( objectType == 409 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 409;
                    if ( objectType == 410 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 410;
                    if ( objectType == 412 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 412;
                    if ( objectType == 413 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 413;
                    if ( objectType == 414 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY-16)] = 414;
                    objectType = 0;
                }
            }
            if ( buttonPressed == 2 ) {
                playerDirection = 2;
                if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 37 ) { //denet
                    Game->PlaySound(69);
                    this->X = playerPositionX+12;
                    this->Y = playerPositionY;
                    this->Data = 38;
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( Screen->ComboD[16] == 420 ) { //final level won
                        finalLevelComplete = true;
                        Screen->D[0] = 1;
                        Screen->SetSideWarp(0, 98, 16, WT_IWARPBLACKOUT);
                        Screen->ComboD[16] = 323;
                        WaitNoAction();
                    }
                    if ( Screen->D[0] == 0 ) {
                        Screen->D[0] = 1;
                        game1UnlockedLevels ++;
                    }
                    Game1StartMenuSelectedOption = 0;
                    Game1StartMenuSelected = false;
                    Game1StartMenuColorTimer = 0;
                    Game1StartMenuWaitTimer = 0;
                    startmenu = true;
                    while(startmenu == true){
                        Game1StartMenu(1, playerPositionX, playerPositionY, playerDirection);
                        Link->PressStart = false;
                        Link->InputStart = false;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                    Screen->ComboD[111] = 4;
                }
                else if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 160 && cannonCooldownTime == 0 ) { //cannon
                    Game->PlaySound(77);
                    cannonCooldownTime = 60;
                    aaaTarget = ComboAt(playerPositionX+16, playerPositionY);
                    cannonshotPositionX = ComboX(aaaTarget)+8;
                    cannonshotPositionY = ComboY(aaaTarget)+8;
                    cannonshotDirection = 2;
                    okay = false;
                    while(okay == false){
                        if ( cannonshotDirection == 1 )
                            cannonshotPositionY -= 4;
                        if ( cannonshotDirection == 2 )
                            cannonshotPositionX += 4;
                        if ( cannonshotDirection == 3 )
                            cannonshotPositionY += 4;
                        if ( cannonshotDirection == 4 )
                            cannonshotPositionX -= 4;
                        if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY+8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY+8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX-8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX-8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY-8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY-8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX+8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX+8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        if ( cannonshotDirection == 1 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 164, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 2 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 165, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 3 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 166, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 4 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 167, 2, OP_OPAQUE);
                        Game1CannonShotPositionX = cannonshotPositionX;
                        Game1CannonShotPositionY = cannonshotPositionY;
                        if ( cannonshotDirection == 1 )
                            Game1CannonShotDirection = DIR_UP;
                        if ( cannonshotDirection == 2 )
                            Game1CannonShotDirection = DIR_RIGHT;
                        if ( cannonshotDirection == 3 )
                            Game1CannonShotDirection = DIR_DOWN;
                        if ( cannonshotDirection == 4 )
                            Game1CannonShotDirection = DIR_LEFT;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                }
                Game1CannonShotPositionX = 0;
                Game1CannonShotPositionY = 0;
                if ( (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 4 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 190 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 84 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 85 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 396 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 120 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 121 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 122) && (GetLayerComboD(3, ComboAt(playerPositionX+16, playerPositionY)) != 64 || LState == true) ) {
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                }
                else if ( (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 52 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 53 || (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 56 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 57 && LState == false) || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 77 || (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 92 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 93 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 140 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 141 && LState == false) || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 168 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 169 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 170 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 171 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 176 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 179 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 188 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 189 || ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] >= 404 && Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] <= 414 )) && Screen->ComboD[ComboAt(playerPositionX+32, playerPositionY)] == 4 ) {
                    Game->PlaySound(50);
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 52 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 53 )
                        objectType = 1;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 56 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 57 )
                        objectType = 2;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 77 )
                        objectType = 3;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 92 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 93 )
                        objectType = 4;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 140 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 141 )
                        objectType = 5;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 168 )
                        objectType = 6;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 169 )
                        objectType = 7;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 170 )
                        objectType = 8;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 171 )
                        objectType = 9;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 176 )
                        objectType = 10;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 179 )
                        objectType = 11;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 188 || Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 189 )
                        objectType = 12;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 404 )
                        objectType = 404;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 405 )
                        objectType = 405;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 406 )
                        objectType = 406;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 408 )
                        objectType = 408;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 409 )
                        objectType = 409;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 410 )
                        objectType = 410;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 412 )
                        objectType = 412;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 413 )
                        objectType = 413;
                    if ( Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] == 414 )
                        objectType = 414;
                    if ( objectType == 12 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 11 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 78 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 79 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 104 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 105 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 127 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 131 && GetLayerComboD(1, ComboAt(playerPositionX+16, playerPositionY)) != 135 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 190;
                    else
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 4;
                    objectPositionX = playerPositionX+16;
                    objectPositionY = playerPositionY;
                    playerPositionX += 1;
                    objectPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 1;
                    objectPositionX += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 2;
                    objectPositionX += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 2;
                    objectPositionX += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 3;
                    objectPositionX += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 3;
                    objectPositionX += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX += 4;
                    objectPositionX += 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( objectType == 1 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 52;
                    if ( objectType == 2 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 56;
                    if ( objectType == 3 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 77;
                    if ( objectType == 4 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 92;
                    if ( objectType == 5 ) {
                        if ( Screen->ComboD[ComboAt(playerPositionX+32, playerPositionY)] == 4 && GetLayerComboD(3, ComboAt(playerPositionX+32, playerPositionY)) != 64 ) {
                            Game->PlaySound(66);
                            objectType = 0;
                            aaaTarget = ComboAt(playerPositionX+16, playerPositionY);
                            Screen->ComboD[aaaTarget] = 144;
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 4 ) {
                                    if ( Screen->ComboD[aaaTarget+2] == 4 && GetLayerComboD(3, aaaTarget+2) != 64 ) {
                                        aaaTarget += 1;
                                        Screen->ComboD[aaaTarget] = 148;
                                    }
                                    else {
                                        aaaTarget += 1;
                                        Screen->ComboD[aaaTarget] = 152;
                                        okay = true;
                                    }
                                }
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 140 )
                                    okay = true;
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                        }
                        else //it could only move 1 tile
                            Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 140;
                    }
                    if ( objectType == 6 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 168;
                    if ( objectType == 7 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 169;
                    if ( objectType == 8 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 170;
                    if ( objectType == 9 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 171;
                    if ( objectType == 10 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 176;
                    if ( objectType == 11 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 179;
                    if ( objectType == 12 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 188;
                    if ( objectType == 404 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 404;
                    if ( objectType == 405 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 405;
                    if ( objectType == 406 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 406;
                    if ( objectType == 408 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 408;
                    if ( objectType == 409 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 409;
                    if ( objectType == 410 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 410;
                    if ( objectType == 412 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 412;
                    if ( objectType == 413 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 413;
                    if ( objectType == 414 )
                        Screen->ComboD[ComboAt(playerPositionX+16, playerPositionY)] = 414;
                    objectType = 0;
                }
            }
            if ( buttonPressed == 3 ) {
                playerDirection = 3;
                if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 37 ) { //denet
                    Game->PlaySound(69);
                    this->X = playerPositionX;
                    this->Y = playerPositionY+12;
                    this->Data = 38;
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( Screen->ComboD[16] == 420 ) { //final level won
                        finalLevelComplete = true;
                        Screen->D[0] = 1;
                        Screen->SetSideWarp(0, 98, 16, WT_IWARPBLACKOUT);
                        Screen->ComboD[16] = 323;
                        WaitNoAction();
                    }
                    if ( Screen->D[0] == 0 ) {
                        Screen->D[0] = 1;
                        game1UnlockedLevels ++;
                    }
                    Game1StartMenuSelectedOption = 0;
                    Game1StartMenuSelected = false;
                    Game1StartMenuColorTimer = 0;
                    Game1StartMenuWaitTimer = 0;
                    startmenu = true;
                    while(startmenu == true){
                        Game1StartMenu(1, playerPositionX, playerPositionY, playerDirection);
                        Link->PressStart = false;
                        Link->InputStart = false;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                    Screen->ComboD[111] = 4;
                }
                else if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 160 && cannonCooldownTime == 0 ) { //cannon
                    Game->PlaySound(77);
                    cannonCooldownTime = 60;
                    aaaTarget = ComboAt(playerPositionX, playerPositionY+16);
                    cannonshotPositionX = ComboX(aaaTarget)+8;
                    cannonshotPositionY = ComboY(aaaTarget)+8;
                    cannonshotDirection = 3;
                    okay = false;
                    while(okay == false){
                        if ( cannonshotDirection == 1 )
                            cannonshotPositionY -= 4;
                        if ( cannonshotDirection == 2 )
                            cannonshotPositionX += 4;
                        if ( cannonshotDirection == 3 )
                            cannonshotPositionY += 4;
                        if ( cannonshotDirection == 4 )
                            cannonshotPositionX -= 4;
                        if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY+8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY+8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX-8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX-8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY-8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY-8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX+8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX+8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        if ( cannonshotDirection == 1 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 164, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 2 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 165, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 3 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 166, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 4 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 167, 2, OP_OPAQUE);
                        Game1CannonShotPositionX = cannonshotPositionX;
                        Game1CannonShotPositionY = cannonshotPositionY;
                        if ( cannonshotDirection == 1 )
                            Game1CannonShotDirection = DIR_UP;
                        if ( cannonshotDirection == 2 )
                            Game1CannonShotDirection = DIR_RIGHT;
                        if ( cannonshotDirection == 3 )
                            Game1CannonShotDirection = DIR_DOWN;
                        if ( cannonshotDirection == 4 )
                            Game1CannonShotDirection = DIR_LEFT;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                }
                Game1CannonShotPositionX = 0;
                Game1CannonShotPositionY = 0;
                if ( (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 4 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 190 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 84 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 85 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 396 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 120 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 121 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 122) && (GetLayerComboD(3, ComboAt(playerPositionX, playerPositionY+16)) != 64 || LState == true) ) {
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                }
                else if ( (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 52 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 53 || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 56 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 57 && LState == false) || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 77 || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 92 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 93 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 140 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 141 && LState == false) || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 168 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 169 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 170 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 171 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 176 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 179 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 188 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 189 || ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] >= 404 && Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] <= 414 )) && Screen->ComboD[ComboAt(playerPositionX, playerPositionY+32)] == 4 ) {
                    Game->PlaySound(50);
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 52 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 53 )
                        objectType = 1;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 56 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 57 )
                        objectType = 2;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 77 )
                        objectType = 3;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 92 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 93 )
                        objectType = 4;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 140 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 141 )
                        objectType = 5;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 168 )
                        objectType = 6;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 169 )
                        objectType = 7;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 170 )
                        objectType = 8;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 171 )
                        objectType = 9;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 176 )
                        objectType = 10;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 179 )
                        objectType = 11;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 188 || Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 189 )
                        objectType = 12;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 404 )
                        objectType = 404;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 405 )
                        objectType = 405;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 406 )
                        objectType = 406;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 408 )
                        objectType = 408;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 409 )
                        objectType = 409;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 410 )
                        objectType = 410;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 412 )
                        objectType = 412;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 413 )
                        objectType = 413;
                    if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] == 414 )
                        objectType = 414;
                    if ( objectType == 12 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 11 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 78 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 79 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 104 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 105 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 127 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 131 && GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY+16)) != 135 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 190;
                    else
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 4;
                    objectPositionX = playerPositionX;
                    objectPositionY = playerPositionY+16;
                    playerPositionY += 1;
                    objectPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 1;
                    objectPositionY += 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 2;
                    objectPositionY += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 2;
                    objectPositionY += 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 3;
                    objectPositionY += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 3;
                    objectPositionY += 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionY += 4;
                    objectPositionY += 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( objectType == 1 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 52;
                    if ( objectType == 2 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 56;
                    if ( objectType == 3 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 77;
                    if ( objectType == 4 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 92;
                    if ( objectType == 5 ) {
                        if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY+32)] == 4 && GetLayerComboD(3, ComboAt(playerPositionX, playerPositionY+32)) != 64 ) {
                            Game->PlaySound(66);
                            objectType = 0;
                            aaaTarget = ComboAt(playerPositionX, playerPositionY+16);
                            Screen->ComboD[aaaTarget] = 144;
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 4 ) {
                                    if ( Screen->ComboD[aaaTarget+32] == 4 && GetLayerComboD(3, aaaTarget+32) != 64 ) {
                                        aaaTarget += 16;
                                        Screen->ComboD[aaaTarget] = 148;
                                    }
                                    else {
                                        aaaTarget += 16;
                                        Screen->ComboD[aaaTarget] = 152;
                                        okay = true;
                                    }
                                }
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 140 )
                                    okay = true;
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                        }
                        else //it could only move 1 tile
                            Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 140;
                    }
                    if ( objectType == 6 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 168;
                    if ( objectType == 7 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 169;
                    if ( objectType == 8 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 170;
                    if ( objectType == 9 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 171;
                    if ( objectType == 10 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 176;
                    if ( objectType == 11 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 179;
                    if ( objectType == 12 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 188;
                    if ( objectType == 404 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 404;
                    if ( objectType == 405 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 405;
                    if ( objectType == 406 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 406;
                    if ( objectType == 408 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 408;
                    if ( objectType == 409 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 409;
                    if ( objectType == 410 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 410;
                    if ( objectType == 412 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 412;
                    if ( objectType == 413 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 413;
                    if ( objectType == 414 )
                        Screen->ComboD[ComboAt(playerPositionX, playerPositionY+16)] = 414;
                    objectType = 0;
                }
            }
            if ( buttonPressed == 4 ) {
                playerDirection = 4;
                if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 37 ) { //denet
                    Game->PlaySound(69);
                    this->X = playerPositionX-12;
                    this->Y = playerPositionY;
                    this->Data = 38;
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( Screen->ComboD[16] == 420 ) { //final level won
                        finalLevelComplete = true;
                        Screen->D[0] = 1;
                        Screen->SetSideWarp(0, 98, 16, WT_IWARPBLACKOUT);
                        Screen->ComboD[16] = 323;
                        WaitNoAction();
                    }
                    if ( Screen->D[0] == 0 ) {
                        Screen->D[0] = 1;
                        game1UnlockedLevels ++;
                    }
                    Game1StartMenuSelectedOption = 0;
                    Game1StartMenuSelected = false;
                    Game1StartMenuColorTimer = 0;
                    Game1StartMenuWaitTimer = 0;
                    startmenu = true;
                    while(startmenu == true){
                        Game1StartMenu(1, playerPositionX, playerPositionY, playerDirection);
                        Link->PressStart = false;
                        Link->InputStart = false;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                    Screen->ComboD[111] = 4;
                }
                else if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 160 && cannonCooldownTime == 0 ) { //cannon
                    Game->PlaySound(77);
                    cannonCooldownTime = 60;
                    aaaTarget = ComboAt(playerPositionX-16, playerPositionY);
                    cannonshotPositionX = ComboX(aaaTarget)+8;
                    cannonshotPositionY = ComboY(aaaTarget)+8;
                    cannonshotDirection = 4;
                    okay = false;
                    while(okay == false){
                        if ( cannonshotDirection == 1 )
                            cannonshotPositionY -= 4;
                        if ( cannonshotDirection == 2 )
                            cannonshotPositionX += 4;
                        if ( cannonshotDirection == 3 )
                            cannonshotPositionY += 4;
                        if ( cannonshotDirection == 4 )
                            cannonshotPositionX -= 4;
                        if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+7)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY+7);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY+7))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 1 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY+8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY+8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY+8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] == 171 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX-8, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX-8, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 2 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX-8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX-8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX-8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 168 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 4;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX, cannonshotPositionY-8);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX, cannonshotPositionY-8))+8;
                            cannonshotDirection = 2;
                        }
                        else if ( cannonshotDirection == 3 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX, cannonshotPositionY-8)] != 190 && ComboAt(cannonshotPositionX, cannonshotPositionY-8) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX, cannonshotPositionY-8), 162);
                            okay = true;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 169 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 1;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+7, cannonshotPositionY)] == 170 ) {
                            Game->PlaySound(78);
                            aaaTarget = ComboAt(cannonshotPositionX+7, cannonshotPositionY);
                            cannonshotPositionX = ComboX(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotPositionY = ComboY(ComboAt(cannonshotPositionX+7, cannonshotPositionY))+8;
                            cannonshotDirection = 3;
                        }
                        else if ( cannonshotDirection == 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 4 && Screen->ComboD[ComboAt(cannonshotPositionX+8, cannonshotPositionY)] != 190 && ComboAt(cannonshotPositionX+8, cannonshotPositionY) != aaaTarget ) {
                            Game->PlaySound(71);
                            SetLayerComboD(4, ComboAt(cannonshotPositionX+8, cannonshotPositionY), 162);
                            okay = true;
                        }
                        if ( cannonshotDirection == 1 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 164, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 2 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 165, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 3 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 166, 2, OP_OPAQUE);
                        if ( cannonshotDirection == 4 && okay == false )
                            Screen->FastCombo(4, cannonshotPositionX-8, cannonshotPositionY-8, 167, 2, OP_OPAQUE);
                        Game1CannonShotPositionX = cannonshotPositionX;
                        Game1CannonShotPositionY = cannonshotPositionY;
                        if ( cannonshotDirection == 1 )
                            Game1CannonShotDirection = DIR_UP;
                        if ( cannonshotDirection == 2 )
                            Game1CannonShotDirection = DIR_RIGHT;
                        if ( cannonshotDirection == 3 )
                            Game1CannonShotDirection = DIR_DOWN;
                        if ( cannonshotDirection == 4 )
                            Game1CannonShotDirection = DIR_LEFT;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                }
                Game1CannonShotPositionX = 0;
                Game1CannonShotPositionY = 0;
                if ( (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 4 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 190 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 84 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 85 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 396 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 120 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 121 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 122) && (GetLayerComboD(3, ComboAt(playerPositionX-16, playerPositionY)) != 64 || LState == true) ) {
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                }
                else if ( (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 52 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 53 || (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 56 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 57 && LState == false) || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 77 || (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 92 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 93 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 140 && LState == false) || (Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 141 && LState == false) || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 168 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 169 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 170 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 171 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 176 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 179 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 188 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 189 || ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] >= 404 && Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] <= 414 )) && Screen->ComboD[ComboAt(playerPositionX-32, playerPositionY)] == 4 ) {
                    Game->PlaySound(50);
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 52 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 53 )
                        objectType = 1;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 56 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 57 )
                        objectType = 2;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 77 )
                        objectType = 3;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 92 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 93 )
                        objectType = 4;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 140 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 141 )
                        objectType = 5;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 168 )
                        objectType = 6;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 169 )
                        objectType = 7;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 170 )
                        objectType = 8;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 171 )
                        objectType = 9;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 176 )
                        objectType = 10;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 179 )
                        objectType = 11;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 188 || Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 189 )
                        objectType = 12;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 404 )
                        objectType = 404;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 405 )
                        objectType = 405;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 406 )
                        objectType = 406;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 408 )
                        objectType = 408;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 409 )
                        objectType = 409;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 410 )
                        objectType = 410;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 412 )
                        objectType = 412;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 413 )
                        objectType = 413;
                    if ( Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] == 414 )
                        objectType = 414;
                    if ( objectType == 12 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 11 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 78 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 79 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 104 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 105 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 127 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 131 && GetLayerComboD(1, ComboAt(playerPositionX-16, playerPositionY)) != 135 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 190;
                    else
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 4;
                    objectPositionX = playerPositionX-16;
                    objectPositionY = playerPositionY;
                    playerPositionX -= 1;
                    objectPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 1;
                    objectPositionX -= 1;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 2;
                    objectPositionX -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 2;
                    objectPositionX -= 2;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 3;
                    objectPositionX -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 3;
                    objectPositionX -= 3;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    playerPositionX -= 4;
                    objectPositionX -= 4;
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    if ( objectType == 1 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 52;
                    if ( objectType == 2 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 56;
                    if ( objectType == 3 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 77;
                    if ( objectType == 4 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 92;
                    if ( objectType == 5 ) {
                        if ( Screen->ComboD[ComboAt(playerPositionX-32, playerPositionY)] == 4 && GetLayerComboD(3, ComboAt(playerPositionX-32, playerPositionY)) != 64 ) {
                            Game->PlaySound(66);
                            objectType = 0;
                            aaaTarget = ComboAt(playerPositionX-16, playerPositionY);
                            Screen->ComboD[aaaTarget] = 144;
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 4 ) {
                                    if ( Screen->ComboD[aaaTarget-2] == 4 && GetLayerComboD(3, aaaTarget-2) != 64 ) {
                                        aaaTarget -= 1;
                                        Screen->ComboD[aaaTarget] = 148;
                                    }
                                    else {
                                        aaaTarget -= 1;
                                        Screen->ComboD[aaaTarget] = 152;
                                        okay = true;
                                    }
                                }
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                            okay = false;
                            while(okay == false){
                                if ( Screen->ComboD[aaaTarget] == 140 )
                                    okay = true;
                                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                            }
                        }
                        else //it could only move 1 tile
                            Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 140;
                    }
                    if ( objectType == 6 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 168;
                    if ( objectType == 7 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 169;
                    if ( objectType == 8 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 170;
                    if ( objectType == 9 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 171;
                    if ( objectType == 10 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 176;
                    if ( objectType == 11 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 179;
                    if ( objectType == 12 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 188;
                    if ( objectType == 404 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 404;
                    if ( objectType == 405 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 405;
                    if ( objectType == 406 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 406;
                    if ( objectType == 408 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 408;
                    if ( objectType == 409 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 409;
                    if ( objectType == 410 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 410;
                    if ( objectType == 412 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 412;
                    if ( objectType == 413 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 413;
                    if ( objectType == 414 )
                        Screen->ComboD[ComboAt(playerPositionX-16, playerPositionY)] = 414;
                    objectType = 0;
                }
            }

            if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] == 84 ) { //apple
                Game->PlaySound(64);
                Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] = 4;
            }
            if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] == 85 ) { //skipper
                Game->PlaySound(75);
                Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] = 4;
                Screen->D[1] = 1;
                game1UnlockedLevels ++;
                Game->Counter[CR_SCRIPT1] ++;
                Screen->Message(32);
            }
            if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] == 396 ) { //star
                Game->PlaySound(86);
                Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] = 4;
                Screen->D[2] = 1;
                if ( game2UnlockedLevels == 0 ) {
                    game2UnlockedLevels = 1;
                    Game->Counter[CR_SCRIPT2] ++;
                    Screen->Message(49);
                }
                else if ( game2UnlockedLevels == 1 ) {
                    game2UnlockedLevels = 2;
                    Game->Counter[CR_SCRIPT2] ++;
                    Screen->Message(51);
                }
                else if ( game2UnlockedLevels == 2 ) {
                    game2UnlockedLevels = 3;
                    Game->Counter[CR_SCRIPT2] ++;
                    Screen->Message(68);
                }
                else if ( game2UnlockedLevels == 3 ) {
                    game2UnlockedLevels = 4;
                    Game->Counter[CR_SCRIPT2] ++;
                    Screen->Message(70);
                }
                else if ( game2UnlockedLevels == 4 ) {
                    game2UnlockedLevels = 5;
                    Game->Counter[CR_SCRIPT2] ++;
                    Screen->Message(72);
                }
                else if ( game2UnlockedLevels == 5 ) {
                    game2UnlockedLevels = 6;
                    Game->Counter[CR_SCRIPT2] ++;
                    Screen->Message(74);
                }
            }
            if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] == 120 ) { //yellow key
                Game->PlaySound(73);
                Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] = 4;
                for(int i = 0; i < 175; i++){
                    if ( Screen->ComboD[i] == 124 ) {
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(4, i, 125);
                        SetLayerComboD(1, i, 127);
                    }
                }
            }
            if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] == 121 ) { //red key
                Game->PlaySound(73);
                Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] = 4;
                for(int i = 0; i < 175; i++){
                    if ( Screen->ComboD[i] == 128 ) {
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(4, i, 129);
                        SetLayerComboD(1, i, 131);
                    }
                }
            }
            if ( Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] == 122 ) { //blue key
                Game->PlaySound(73);
                Screen->ComboD[ComboAt(playerPositionX, playerPositionY)] = 4;
                for(int i = 0; i < 175; i++){
                    if ( Screen->ComboD[i] == 132 ) {
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(4, i, 133);
                        SetLayerComboD(1, i, 135);
                    }
                }
            }

            for(int i = 0; i < 175; i++){
                if ( GetLayerComboD(3, i) == 64 ) { //water
                    if ( Screen->ComboD[i] == 52 ) {
                        Game->PlaySound(61);
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(3, i, 68);
                    }
                    else if ( Screen->ComboD[i] == 188 ) {
                        Game->PlaySound(61);
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(3, i, 69);
                    }
                    else if ( Screen->ComboD[i] != 4 ) {
                        Game->PlaySound(61);
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(4, i, 65);
                    }
                }
            }

            for(int i = 0; i < 175; i++){
                if ( GetLayerComboD(1, i) == 180 && Screen->ComboD[i] == 176 ) { //bad robot on heart tile
                    Game->PlaySound(70);
                    Screen->ComboD[i] = 179;
                    SetLayerComboD(4, i, 177);
                }
                if ( GetLayerComboD(1, i) == 11 && (Screen->ComboD[i] == 52 || Screen->ComboD[i] == 56 || Screen->ComboD[i] == 92 || Screen->ComboD[i] == 140 || Screen->ComboD[i] == 188) ) { //valid block on x tile
                    Game->PlaySound(62);
                    Screen->ComboD[i] ++;
                }
            }

            if ( GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY)) == 79 && buttonPressed == 7 ) { //L tile
                if ( LState == false ) {
                    Game->PlaySound(68);
                    LState = true;
                }
                else if ( LState == true ) {
                    Game->PlaySound(72);
                    LState = false;
                }
            }

            if ( GetLayerComboD(1, ComboAt(playerPositionX, playerPositionY)) == 78 && buttonPressed == 6 ) { //bomb
                for(int i = 0; i < 175; i++){
                    if ( Screen->ComboD[i] == 77 ) {
                        Game->PlaySound(3);
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(4, i, 162);
                        SetLayerComboD(4, i-16, 162);
                        SetLayerComboD(4, i+1, 162);
                        SetLayerComboD(4, i+16, 162);
                        SetLayerComboD(4, i-1, 162);
                    }
                }
            }

            okay = false;
            while(okay==false){
                okay = true;
                for(int i = 0; i < 175; i++){
                    if ( (GetLayerComboD(4, i) == 162 || GetLayerComboD(4, i) == 163 || (GetLayerComboD(4, i) >= 212 && GetLayerComboD(4, i) <= 229)) ) {
                        if ( Screen->ComboD[i] == 77 && GetLayerComboD(4, i) != 162 ) {
                            Game->PlaySound(3);
                            Screen->ComboD[i] = 4;
                            SetLayerComboD(4, i, 162);
                            SetLayerComboD(4, i-16, 162);
                            SetLayerComboD(4, i+1, 162);
                            SetLayerComboD(4, i+16, 162);
                            SetLayerComboD(4, i-1, 162);
                            okay = false;
                        }
                        if ( Screen->ComboD[i] == 52 || Screen->ComboD[i] == 53 || Screen->ComboD[i] == 76 || Screen->ComboD[i] == 189 )
                            Screen->ComboD[i] = 4;
                        if ( Screen->ComboD[i] == 188 && GetLayerComboD(1, i) != 11 && GetLayerComboD(1, i) != 78 && GetLayerComboD(1, i) != 79 && GetLayerComboD(1, i) != 104 && GetLayerComboD(1, i) != 105 && GetLayerComboD(1, i) != 127 && GetLayerComboD(1, i) != 131 && GetLayerComboD(1, i) != 135 )
                            Screen->ComboD[i] = 190;
                        else if ( Screen->ComboD[i] == 188 )
                            Screen->ComboD[i] = 4;
                    }
                }
                if ( okay == false ) {
                  WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                  WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                  WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                  WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                  WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                  WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                }
            }

            okay = false;
            for(int i = 0; i < 175; i++){
                if ( Screen->ComboD[i] == 92 || Screen->ComboD[i] == 93 ) { //starblocks
                    if ( Screen->ComboD[i-16] == 92 || Screen->ComboD[i-16] == 93 || Screen->ComboD[i-16] == 98 || Screen->ComboD[i-16] == 99
                    || Screen->ComboD[i+1] == 92 || Screen->ComboD[i+1] == 93 || Screen->ComboD[i+1] == 98 || Screen->ComboD[i+1] == 99
                    || Screen->ComboD[i+16] == 92 || Screen->ComboD[i+16] == 93 || Screen->ComboD[i+16] == 98 || Screen->ComboD[i+16] == 99
                    || Screen->ComboD[i-1] == 92 || Screen->ComboD[i-1] == 93 || Screen->ComboD[i-1] == 98 || Screen->ComboD[i-1] == 99 ) {
                        Screen->ComboD[i] += 6;
                        okay = true;
                    }
                }
            }
            if ( okay == true ) {
                Game->PlaySound(66);
                for(int i = 0; i < 175; i++){
                    if ( Screen->ComboD[i] == 98 || Screen->ComboD[i] == 99 ) {
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(4, i, 96);
                    }
                }
            }

            if ( (Screen->ComboD[teleporterPosition] != 4 || playerPositionX == ComboX(teleporterPosition) && playerPositionY == ComboY(teleporterPosition)) && Screen->ComboD[teleporterTargetPosition] == 4 && (playerPositionX != ComboX(teleporterTargetPosition) || playerPositionY != ComboY(teleporterTargetPosition)) ) {
                Game->PlaySound(67);
                if ( Screen->ComboD[teleporterPosition] == 52 ) {
                    Screen->ComboD[teleporterPosition] = 236;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 56 ) {
                    Screen->ComboD[teleporterPosition] = 240;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 92 ) {
                    Screen->ComboD[teleporterPosition] = 244;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 77 ) {
                    Screen->ComboD[teleporterPosition] = 248;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 176 ) {
                    Screen->ComboD[teleporterPosition] = 252;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 179 ) {
                    Screen->ComboD[teleporterPosition] = 256;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 140 ) {
                    Screen->ComboD[teleporterPosition] = 276;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 188 ) {
                    Screen->ComboD[teleporterPosition] = 280;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 168 ) {
                    Screen->ComboD[teleporterPosition] = 284;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 169 ) {
                    Screen->ComboD[teleporterPosition] = 288;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 170 ) {
                    Screen->ComboD[teleporterPosition] = 292;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( Screen->ComboD[teleporterPosition] == 171 ) {
                    Screen->ComboD[teleporterPosition] = 296;
                    aaaTarget = Screen->ComboD[teleporterPosition];
                }
                if ( playerPositionX == ComboX(teleporterPosition) && playerPositionY == ComboY(teleporterPosition) ) {
                    if ( playerDirection == 1 ) {
                        Screen->ComboD[teleporterPosition] = 260;
                        aaaTarget = Screen->ComboD[teleporterPosition];
                    }
                    if ( playerDirection == 2 ) {
                        Screen->ComboD[teleporterPosition] = 264;
                        aaaTarget = Screen->ComboD[teleporterPosition];
                    }
                    if ( playerDirection == 3 ) {
                        Screen->ComboD[teleporterPosition] = 268;
                        aaaTarget = Screen->ComboD[teleporterPosition];
                    }
                    if ( playerDirection == 4 ) {
                        Screen->ComboD[teleporterPosition] = 272;
                        aaaTarget = Screen->ComboD[teleporterPosition];
                    }
                    playerDirection = 0;
                }
                okay = false;
                while(okay==false){
                    if ( Screen->ComboD[teleporterPosition] == 1 ) {
                        Screen->ComboD[teleporterPosition] = 4;
                        okay = true;
                    }
                    WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                }
                Screen->ComboD[teleporterTargetPosition] = aaaTarget+2;
                okay = false;
                if ( playerDirection == 0 ) {
                    while(okay==false){
                        if ( Screen->ComboD[teleporterTargetPosition] == 44 || Screen->ComboD[teleporterTargetPosition] == 45 || Screen->ComboD[teleporterTargetPosition] == 46 || Screen->ComboD[teleporterTargetPosition] == 47 )
                            okay = true;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                }
                else {
                    while(okay==false){
                        if ( Screen->ComboD[teleporterTargetPosition] != aaaTarget+2 && Screen->ComboD[teleporterTargetPosition] != aaaTarget+3 )
                            okay = true;
                        WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
                    }
                }
                if ( Screen->ComboD[teleporterTargetPosition] == 44 ) {
                    Screen->ComboD[teleporterTargetPosition] = 4;
                    playerPositionX = ComboX(teleporterTargetPosition);
                    playerPositionY = ComboY(teleporterTargetPosition);
                    playerDirection = 1;
                }
                if ( Screen->ComboD[teleporterTargetPosition] == 45 ) {
                    Screen->ComboD[teleporterTargetPosition] = 4;
                    playerPositionX = ComboX(teleporterTargetPosition);
                    playerPositionY = ComboY(teleporterTargetPosition);
                    playerDirection = 2;
                }
                if ( Screen->ComboD[teleporterTargetPosition] == 46 ) {
                    Screen->ComboD[teleporterTargetPosition] = 4;
                    playerPositionX = ComboX(teleporterTargetPosition);
                    playerPositionY = ComboY(teleporterTargetPosition);
                    playerDirection = 3;
                }
                if ( Screen->ComboD[teleporterTargetPosition] == 47 ) {
                    Screen->ComboD[teleporterTargetPosition] = 4;
                    playerPositionX = ComboX(teleporterTargetPosition);
                    playerPositionY = ComboY(teleporterTargetPosition);
                    playerDirection = 4;
                }
            }

            okay = false;
            for(int i = 0; i < 175; i++){
                if ( Screen->ComboD[i] == 92 || Screen->ComboD[i] == 93 ) { //starblocks
                    if ( Screen->ComboD[i-16] == 92 || Screen->ComboD[i-16] == 93 || Screen->ComboD[i-16] == 98 || Screen->ComboD[i-16] == 99
                    || Screen->ComboD[i+1] == 92 || Screen->ComboD[i+1] == 93 || Screen->ComboD[i+1] == 98 || Screen->ComboD[i+1] == 99
                    || Screen->ComboD[i+16] == 92 || Screen->ComboD[i+16] == 93 || Screen->ComboD[i+16] == 98 || Screen->ComboD[i+16] == 99
                    || Screen->ComboD[i-1] == 92 || Screen->ComboD[i-1] == 93 || Screen->ComboD[i-1] == 98 || Screen->ComboD[i-1] == 99 ) {
                        Screen->ComboD[i] += 6;
                        okay = true;
                    }
                }
            }
            if ( okay == true ) {
                Game->PlaySound(66);
                for(int i = 0; i < 175; i++){
                    if ( Screen->ComboD[i] == 98 || Screen->ComboD[i] == 99 ) {
                        Screen->ComboD[i] = 4;
                        SetLayerComboD(4, i, 96);
                    }
                }
            }

            okay = true;
            for(int i = 0; i < 175; i++){ //denet
                if ( GetLayerComboD(1, i) == 11 && Screen->ComboD[i] != 53 && Screen->ComboD[i] != 57 && Screen->ComboD[i] != 93 && Screen->ComboD[i] != 141 && Screen->ComboD[i] != 189 )
                    okay = false;
                if ( Screen->ComboD[i] == 84 || Screen->ComboD[i] == 176 )
                    okay = false;
            }
            if ( okay == true && Screen->ComboD[denetPosition] != 37 && denetPosition != 0 ) {
                Game->PlaySound(63);
                Screen->ComboD[denetPosition] = 37;
                SetLayerComboD(4, denetPosition, 177);
            }
            else if ( okay == false && Screen->ComboD[denetPosition] != 36 && denetPosition != 0 )
                Screen->ComboD[denetPosition] = 36;

            buttonPressed = 0;
            WaitframeDraw(playerPositionX, playerPositionY, playerDirection, objectPositionX, objectPositionY, objectType);
        }
    }
}

ffc script Game2{
    void run(){
        this->Flags[FFCF_OVERLAY] = true;
        int anotPositionX = 0;
        int anotPositionY = 0;
        int anotDirection = 1;
        int denetPositionX = 0;
        int denetPositionY = 0;
        int denetDirection = 1;
        int currentPlayer = 0; //0 = anot, 1 = denet
        int currentPlayerPositionX = 0;
        int currentPlayerPositionY = 0;
        int currentPlayerDirection = 1;

        int buttonPressed = 0; //0 = nothing, 1 = up, 2 = right, 3 = down, 4 = left, 5 = A, 6 = B, 7 = L, 8 = R
        int buttonHoldTimer = 0;
        movePress = 0;
        movePressTimer = 0;

        startmenu2 = false;
        bool okay = true;
        Game2StartMenuBlocked = true;
        playerSwitched = 0;

        for(int i = 0; i < 175; i++){
            SetLayerComboD(4, i, 0);
            if ( Screen->ComboD[i] == 44 ){
                anotPositionX = ComboX(i);
                anotPositionY = ComboY(i);
                anotDirection = 1;
                currentPlayerPositionX = anotPositionX;
                currentPlayerPositionY = anotPositionY;
                currentPlayerDirection = anotDirection;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 45 ){
                anotPositionX = ComboX(i);
                anotPositionY = ComboY(i);
                anotDirection = 2;
                currentPlayerPositionX = anotPositionX;
                currentPlayerPositionY = anotPositionY;
                currentPlayerDirection = anotDirection;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 46 ){
                anotPositionX = ComboX(i);
                anotPositionY = ComboY(i);
                anotDirection = 3;
                currentPlayerPositionX = anotPositionX;
                currentPlayerPositionY = anotPositionY;
                currentPlayerDirection = anotDirection;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 47 ){
                anotPositionX = ComboX(i);
                anotPositionY = ComboY(i);
                anotDirection = 4;
                currentPlayerPositionX = anotPositionX;
                currentPlayerPositionY = anotPositionY;
                currentPlayerDirection = anotDirection;
                Screen->ComboD[i] = 4;
            }
            if ( Screen->ComboD[i] == 376 ){
                denetPositionX = ComboX(i);
                denetPositionY = ComboY(i);
                denetDirection = 1;
            }
            if ( Screen->ComboD[i] == 377 ){
                denetPositionX = ComboX(i);
                denetPositionY = ComboY(i);
                denetDirection = 2;
            }
            if ( Screen->ComboD[i] == 378 ){
                denetPositionX = ComboX(i);
                denetPositionY = ComboY(i);
                denetDirection = 3;
            }
            if ( Screen->ComboD[i] == 379 ){
                denetPositionX = ComboX(i);
                denetPositionY = ComboY(i);
                denetDirection = 4;
            }
        }
        while(true){
            while(buttonPressed == 0){
                if ( Link->PressUp == true || movePress == 1 ) {
                    buttonPressed = 1;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressRight == true || movePress == 2 ) {
                    buttonPressed = 2;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressDown == true || movePress == 3 ) {
                    buttonPressed = 3;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressLeft == true || movePress == 4 ) {
                    buttonPressed = 4;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressA == true ) {
                    buttonPressed = 5;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressB == true ) {
                    buttonPressed = 6;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressL == true && playerSwitched == 0 ) {
                    playerSwitched = 22;
                    if ( currentPlayer == 0 ) {
                        Link->Item[143] = true;
                        Link->Item[144] = true;
                        Link->Item[145] = true;
                        Link->Item[146] = true;
                        Link->Item[147] = true;
                        Link->Item[148] = true;
                        Link->Item[149] = true;
                        if ( currentPlayerDirection == 1 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 44;
                        else if ( currentPlayerDirection == 2 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 45;
                        else if ( currentPlayerDirection == 3 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 46;
                        else if ( currentPlayerDirection == 4 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 47;
                        currentPlayer = 1;
                        currentPlayerPositionX = denetPositionX;
                        currentPlayerPositionY = denetPositionY;
                        currentPlayerDirection = denetDirection;
                        Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 4;
                        SetLayerComboD(4, ComboAt(currentPlayerPositionX, currentPlayerPositionY), 177); 
                    }
                    else if ( currentPlayer == 1 ) {
                        Link->Item[143] = false;
                        Link->Item[144] = false;
                        Link->Item[145] = false;
                        Link->Item[146] = false;
                        Link->Item[147] = false;
                        Link->Item[148] = false;
                        Link->Item[149] = false;
                        if ( currentPlayerDirection == 1 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 376;
                        else if ( currentPlayerDirection == 2 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 377;
                        else if ( currentPlayerDirection == 3 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 378;
                        else if ( currentPlayerDirection == 4 )
                            Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 379;
                        currentPlayer = 0;
                        currentPlayerPositionX = anotPositionX;
                        currentPlayerPositionY = anotPositionY;
                        currentPlayerDirection = anotDirection;
                        Screen->ComboD[ComboAt(currentPlayerPositionX, currentPlayerPositionY)] = 4;
                        SetLayerComboD(4, ComboAt(currentPlayerPositionX, currentPlayerPositionY), 177); 
                    }
                }
                if ( Link->PressR == true ) {
                    buttonPressed = 8;
                    buttonHoldTimer = 0;
                }
                if ( Link->PressStart == true && Game2StartMenuBlocked == false ) {
                    Game->PlaySound(83);
                    Link->PressStart = false;
                    Link->InputStart = false;
                    buttonHoldTimer = 0;
                    Game2StartMenuSelected = false;
                    Game2StartMenuSelectedOption = 0;
                    Game2StartMenuColorTimer = 0;
                    Game2StartMenuWaitTimer = 0;
                    startmenu2 = true;
                    while(startmenu2 == true){
                        Game2StartMenu(0, currentPlayerPositionX, currentPlayerPositionY, currentPlayerDirection, currentPlayer);
                        Link->PressStart = false;
                        Link->InputStart = false;
                        WaitframeDrawGT(currentPlayerPositionX, currentPlayerPositionY, currentPlayerDirection, currentPlayer);
                    }
                }
                if ( Link->InputUp == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 1;
                }
                if ( Link->InputRight == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 2;
                }
                if ( Link->InputDown == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 3;
                }
                if ( Link->InputLeft == true && buttonPressed == 0 ) {
                    buttonHoldTimer ++;
                    if ( buttonHoldTimer >= buttonHoldWalk )
                        buttonPressed = 4;
                }
                WaitframeDrawGT(currentPlayerPositionX, currentPlayerPositionY, currentPlayerDirection, currentPlayer);
            } //loop end, a button has been pressed
            movePress = 0;
            movePressTimer = 0;



            buttonPressed = 0;
            WaitframeDrawGT(currentPlayerPositionX, currentPlayerPositionY, currentPlayerDirection, currentPlayer);
        }
    }
}

ffc script Boss1{
    void run(){
        while(true){
            if ( Screen->ComboD[106] == 404 && Screen->ComboD[107] == 405 && Screen->ComboD[108] == 406 && Screen->ComboD[122] == 408 && Screen->ComboD[123] == 409 && Screen->ComboD[124] == 410 && Screen->ComboD[138] == 412 && Screen->ComboD[139] == 413 &&Screen->ComboD[140] == 414 ) {
                Boss1Dead = true;
                Game->PlayMIDI(0);
                for(int i=0; i<90; i+=1){
                    Waitframe();
                }
                for(int radius=0; radius<120; radius+=2){
                    Screen->Circle(3, 184, 120, radius, 1, 1, 0, 0, 0, true, OP_OPAQUE);
                    Waitframe();
                }
                for(int i=0; i<10; i+=1){
                    Screen->Circle(3, 184, 120, 120, 1, 1, 0, 0, 0, true, OP_TRANS);
                    Waitframe();
                }
                Game->PlaySound(63);
                SetLayerComboD(4, 123, 177);
                Screen->ComboD[106] = 4;
                Screen->ComboD[107] = 4;
                Screen->ComboD[108] = 4;
                Screen->ComboD[122] = 4;
                Screen->ComboD[123] = 37;
                Screen->ComboD[124] = 4;
                Screen->ComboD[138] = 4;
                Screen->ComboD[139] = 4;
                Screen->ComboD[140] = 4;
                Boss1Dead = false;
                Quit();
            }
            Waitframe();
        }
    }
}

ffc script ToTitleWarp{
    void run(){
        bool oneHundredPercent = false;
        if ( oneHundredPercentMessage == false ) {
            oneHundredPercent = true;
            int sourceMap = 0;
            int sourceScreen = 0;
            int sourceDMap = 0;
            int okay = 1;
            while(okay <= 156){
                if ( okay >= 1 && okay <= 119 ) {
                    sourceMap = 1;
                    sourceScreen = okay - 1;
                    if ( okay >= 1 && okay <= 29 )
                        sourceDMap = 0;
                    if ( okay >= 30 && okay <= 59 )
                        sourceDMap = 5;
                    if ( okay >= 60 && okay <= 89 )
                        sourceDMap = 6;
                    if ( okay >= 90 && okay <= 119 )
                        sourceDMap = 7;
                }
                if ( okay >= 120 && okay <= 149 ) {
                    sourceMap = 5;
                    sourceScreen = okay - 120;
                    sourceDMap = 8;
                }
                if ( okay >= 150 ) {
                    sourceMap = 5;
                    sourceScreen = okay - 120;
                    sourceDMap = 11;
                }
                if ( Game->GetDMapScreenD(sourceDMap, sourceScreen, 0) == 0 )
                    oneHundredPercent = false;
                okay ++;
            }
            if ( Game->Counter[CR_SCRIPT1] < 6 )
                oneHundredPercent = false;
            if ( Game->Counter[CR_SCRIPT2] < 6 )
                oneHundredPercent = false;
        }
        if ( oneHundredPercent == true ) {
            oneHundredPercentMessage = true;
            Screen->Message(77);
            WaitNoAction();
        }
        if ( finalLevelComplete == true )
           this->Data = 327;
        else
           this->Data = 323;
        NoAction();
    }
}

void Game1StartMenu(int type, int playerPositionX, int playerPositionY, int playerDirection){
    if ( (Link->PressB || Link->PressStart) && type == 0 && Game1StartMenuSelected == false ) {
        Game->PlaySound(84);
        Game1StartMenuSelectedOption = 5;
        Game1StartMenuSelected = true;
        startmenu = false;
    }
    else if ( (Link->PressA || (Link->PressStart && type == 1)) && Game1StartMenuSelected == false ) {
        if ( type == 0 && Game1StartMenuSelectedOption == 0 ) {
            Game1StartMenuSelected = true;
            startmenu = false;
        }
        else if ( type == 1 && Game1StartMenuSelectedOption == 0 ) {
            Game->PlaySound(80);
            Game1StartMenuSelected = true;
        }
        else if ( Game1StartMenuSelectedOption == 1 ) {
            Game->PlaySound(80);
            Game1StartMenuSelected = true;
        }
        else if ( Game1StartMenuSelectedOption == 2 ) {
                Screen->DrawTile(6, 80, 32, 1893, 6, 6, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //messagebox
                int text[] = "Saving...";
                Screen->DrawString(6, 128, 70, FONT_GBORACLEP, 1, -1, TF_CENTERED, text, OP_OPAQUE);
                int text9[] = "-Paused-";
                if ( type == 0 ) {
                    Screen->DrawString(6, 127, 16, FONT_GBORACLEP, 8, -1, TF_CENTERED, text9, OP_OPAQUE);
                    Screen->DrawString(6, 129, 16, FONT_GBORACLEP, 8, -1, TF_CENTERED, text9, OP_OPAQUE);
                    Screen->DrawString(6, 128, 15, FONT_GBORACLEP, 8, -1, TF_CENTERED, text9, OP_OPAQUE);
                    Screen->DrawString(6, 128, 17, FONT_GBORACLEP, 8, -1, TF_CENTERED, text9, OP_OPAQUE);
                    Screen->DrawString(6, 128, 16, FONT_GBORACLEP, 6, -1, TF_CENTERED, text9, OP_OPAQUE);
                }
                Link->PressStart = false;
                Link->InputStart = false;
                NoAction();
                WaitframeDraw(playerPositionX, playerPositionY, playerDirection, 0, 0, 0);
                Game->Save();
                Game->PlaySound(80);
        }
        else if ( Game1StartMenuSelectedOption == 3 ) {
            Game->PlaySound(80);
            Game1StartMenuSelected = true;
        }
        else if ( Game1StartMenuSelectedOption == 4 ) {
            Game->PlaySound(80);
            Game1StartMenuSelected = true;
        }
    }
    else if ( Link->PressUp && Game1StartMenuSelected == false ) {
        Game->PlaySound(79);
        if ( Game1StartMenuSelectedOption == 0 )
            Game1StartMenuSelectedOption = 4;
        else
            Game1StartMenuSelectedOption --;
    }
    else if ( Link->PressDown && Game1StartMenuSelected == false ) {
        Game->PlaySound(79);
        if ( Game1StartMenuSelectedOption == 4 )
            Game1StartMenuSelectedOption = 0;
        else
            Game1StartMenuSelectedOption ++;
    }

    int selectedLevel = currentLevel;
    if ( Game1StartMenuSelected == true && type == 1 && Game1StartMenuSelectedOption == 0 ) {
        selectedLevel = currentLevel + 1;
        if ( selectedLevel > 150 + game2UnlockedLevels )
            selectedLevel = 1;
    }
    int sourceMap = 0;
    int sourceScreen = 0;
    int sourceDMap = 0;

    if ( selectedLevel >= 1 && selectedLevel <= 119 ) {
        sourceMap = 1;
        sourceScreen = selectedLevel - 1;
        if ( selectedLevel >= 1 && selectedLevel <= 29 )
            sourceDMap = 0;
        if ( selectedLevel >= 30 && selectedLevel <= 59 )
            sourceDMap = 5;
        if ( selectedLevel >= 60 && selectedLevel <= 89 )
            sourceDMap = 6;
        if ( selectedLevel >= 90 && selectedLevel <= 119 )
            sourceDMap = 7;
    }
    if ( selectedLevel >= 120 && selectedLevel <= 149 ) {
        sourceMap = 5;
        sourceScreen = selectedLevel - 120;
        sourceDMap = 8;
    }
    if ( selectedLevel >= 150 ) {
        sourceMap = 5;
        sourceScreen = selectedLevel - 120;
        sourceDMap = 11;
    }

    if ( Game1StartMenuWaitTimer >= 60 && Game1StartMenuSelected == true ) {
        startmenu = false;
        if ( (type == 1 && Game1StartMenuSelectedOption == 0) || Game1StartMenuSelectedOption == 1 ) {
            if ( type == 1 && Game1StartMenuSelectedOption == 0 ) {
                currentLevel ++;
                if ( currentLevel > 150 + game2UnlockedLevels )
                    currentLevel = 1;
            }
            Screen->SetSideWarp(0, sourceScreen, sourceDMap, WT_IAWARP);
            Screen->ComboD[16] = 323;
            RestoreWater();
        }
        else if ( Game1StartMenuSelectedOption == 3 ) {
            Screen->SetSideWarp(0, 114, 3, WT_IWARPBLACKOUT);
            Screen->ComboD[16] = 323;
            RestoreWater();
        }
        else if ( Game1StartMenuSelectedOption == 4 ) {
            Screen->SetSideWarp(0, 0x7C, 1, WT_IWARPBLACKOUT);
            Screen->ComboD[16] = 323;
            RestoreWater();
        }
    }

    Screen->DrawTile(6, 80, 32, 1893, 6, 6, 2, -1, -1, 0, 0, 0, 0, true, OP_OPAQUE); //messagebox

    int text2[] = "-Paused-";
    if ( type == 0 ) {
        Screen->DrawString(6, 127, 16, FONT_GBORACLEP, 8, -1, TF_CENTERED, text2, OP_OPAQUE);
        Screen->DrawString(6, 129, 16, FONT_GBORACLEP, 8, -1, TF_CENTERED, text2, OP_OPAQUE);
        Screen->DrawString(6, 128, 15, FONT_GBORACLEP, 8, -1, TF_CENTERED, text2, OP_OPAQUE);
        Screen->DrawString(6, 128, 17, FONT_GBORACLEP, 8, -1, TF_CENTERED, text2, OP_OPAQUE);
        Screen->DrawString(6, 128, 16, FONT_GBORACLEP, 6, -1, TF_CENTERED, text2, OP_OPAQUE);
    }

    int text3[] = "Continue";
    if ( type == 0 ) {
        Screen->DrawString(6, 128, 36, FONT_GBORACLEP, 1, -1, TF_CENTERED, text3, OP_OPAQUE);
        if ( Game1StartMenuSelectedOption == 0 )
            Screen->DrawString(6, 128, 36, FONT_GBORACLEP, 10, -1, TF_CENTERED, text3, OP_OPAQUE);
    }

    int text4[] = "Next Level";
    if ( type == 1 ) {
        Screen->DrawString(6, 128, 36, FONT_GBORACLEP, 1, -1, TF_CENTERED, text4, OP_OPAQUE);
        if ( Game1StartMenuSelectedOption == 0 )
            Screen->DrawString(6, 128, 36, FONT_GBORACLEP, 10, -1, TF_CENTERED, text4, OP_OPAQUE);
        if ( (Game1StartMenuColorTimer == 2 || Game1StartMenuColorTimer == 3) && Game1StartMenuSelected == true && Game1StartMenuSelectedOption == 0 )
            Screen->DrawString(6, 128, 36, FONT_GBORACLEP, 1, -1, TF_CENTERED, text4, OP_OPAQUE);
    }

    int text5[] = "Retry";
    Screen->DrawString(6, 128, 52, FONT_GBORACLEP, 1, -1, TF_CENTERED, text5, OP_OPAQUE);
    if ( Game1StartMenuSelectedOption == 1 )
        Screen->DrawString(6, 128, 52, FONT_GBORACLEP, 10, -1, TF_CENTERED, text5, OP_OPAQUE);
    if ( (Game1StartMenuColorTimer == 2 || Game1StartMenuColorTimer == 3) && Game1StartMenuSelected == true && Game1StartMenuSelectedOption == 1 )
        Screen->DrawString(6, 128, 52, FONT_GBORACLEP, 1, -1, TF_CENTERED, text5, OP_OPAQUE);

    int text6[] = "Save";
    Screen->DrawString(6, 128, 68, FONT_GBORACLEP, 1, -1, TF_CENTERED, text6, OP_OPAQUE);
    if ( Game1StartMenuSelectedOption == 2 )
        Screen->DrawString(6, 128, 68, FONT_GBORACLEP, 10, -1, TF_CENTERED, text6, OP_OPAQUE);

    int text7[] = "Level Selection";
    Screen->DrawString(6, 128, 84, FONT_GBORACLEP, 1, -1, TF_CENTERED, text7, OP_OPAQUE);
    if ( Game1StartMenuSelectedOption == 3 )
        Screen->DrawString(6, 128, 84, FONT_GBORACLEP, 10, -1, TF_CENTERED, text7, OP_OPAQUE);
    if ( (Game1StartMenuColorTimer == 2 || Game1StartMenuColorTimer == 3) && Game1StartMenuSelected == true && Game1StartMenuSelectedOption == 3 )
        Screen->DrawString(6, 128, 84, FONT_GBORACLEP, 1, -1, TF_CENTERED, text7, OP_OPAQUE);

    int text8[] = "Title Screen";
    Screen->DrawString(6, 128, 100, FONT_GBORACLEP, 1, -1, TF_CENTERED, text8, OP_OPAQUE);
    if ( Game1StartMenuSelectedOption == 4 )
        Screen->DrawString(6, 128, 100, FONT_GBORACLEP, 10, -1, TF_CENTERED, text8, OP_OPAQUE);
    if ( (Game1StartMenuColorTimer == 2 || Game1StartMenuColorTimer == 3) && Game1StartMenuSelected == true && Game1StartMenuSelectedOption == 4 )
        Screen->DrawString(6, 128, 100, FONT_GBORACLEP, 1, -1, TF_CENTERED, text8, OP_OPAQUE);

    if ( Game1StartMenuSelected == true ) {
        if ( Game1StartMenuColorTimer == 3 )
            Game1StartMenuColorTimer = 0;
        else
            Game1StartMenuColorTimer ++;
        Game1StartMenuWaitTimer ++;
    }
    Screen->ComboD[111] = 205;
}

void Game2StartMenu(int type, int currentPlayerPositionX, int currentPlayerPositionY, int currentPlayerDirection, int currentPlayer){

    WaitframeDrawGT(currentPlayerPositionX, currentPlayerPositionY, currentPlayerDirection, currentPlayer);
}

void WaitframeDraw(int playerPositionX, int playerPositionY, int playerDirection, int objectPositionX, int objectPositionY, int objectType){
    Link->X = playerPositionX;
    Link->Y = playerPositionY;
    game1OpeningWipePositionX = playerPositionX;
    game1OpeningWipePositionY = playerPositionY;
    if ( playerDirection == 1 && LState == false && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 44, 2, OP_OPAQUE);
    if ( playerDirection == 2 && LState == false && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 45, 2, OP_OPAQUE);
    if ( playerDirection == 3 && LState == false && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 46, 2, OP_OPAQUE);
    if ( playerDirection == 4 && LState == false && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 47, 2, OP_OPAQUE);
    if ( playerDirection == 1 && LState == true && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 112, 2, OP_OPAQUE);
    if ( playerDirection == 2 && LState == true && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 113, 2, OP_OPAQUE);
    if ( playerDirection == 3 && LState == true && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 114, 2, OP_OPAQUE);
    if ( playerDirection == 4 && LState == true && Game1Dead == false )
        Screen->FastCombo(2, playerPositionX, playerPositionY, 115, 2, OP_OPAQUE);

    if ( objectType == 1 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 52, 2, OP_OPAQUE);
    if ( objectType == 2 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 56, 2, OP_OPAQUE);
    if ( objectType == 3 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 77, 2, OP_OPAQUE);
    if ( objectType == 4 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 92, 2, OP_OPAQUE);
    if ( objectType == 5 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 140, 2, OP_OPAQUE);
    if ( objectType == 6 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 168, 2, OP_OPAQUE);
    if ( objectType == 7 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 169, 2, OP_OPAQUE);
    if ( objectType == 8 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 170, 2, OP_OPAQUE);
    if ( objectType == 9 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 171, 2, OP_OPAQUE);
    if ( objectType == 10 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 176, 2, OP_OPAQUE);
    if ( objectType == 11 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 179, 2, OP_OPAQUE);
    if ( objectType == 12 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, 188, 2, OP_OPAQUE);
    if ( objectType >= 404 && objectType <= 414 )
        Screen->FastCombo(2, objectPositionX, objectPositionY, objectType, 2, OP_OPAQUE);

    if ( currentLevel <= 150 )
        Screen->DrawInteger(5, 142, -32, FONT_Z1, 1, -1, 0, 0, currentLevel, 0, OP_OPAQUE);
    int letterA[] = "A";
    int letterB[] = "B";
    int letterC[] = "C";
    int letterD[] = "D";
    int letterE[] = "E";
    int letterF[] = "F";
    if ( currentLevel == 151 )
        Screen->DrawString(5, 148, -32, FONT_Z1, 1, -1, TF_CENTERED, letterA, OP_OPAQUE);
    if ( currentLevel == 152 )
        Screen->DrawString(5, 148, -32, FONT_Z1, 1, -1, TF_CENTERED, letterB, OP_OPAQUE);
    if ( currentLevel == 153 )
        Screen->DrawString(5, 148, -32, FONT_Z1, 1, -1, TF_CENTERED, letterC, OP_OPAQUE);
    if ( currentLevel == 154 )
        Screen->DrawString(5, 148, -32, FONT_Z1, 1, -1, TF_CENTERED, letterD, OP_OPAQUE);
    if ( currentLevel == 155 )
        Screen->DrawString(5, 148, -32, FONT_Z1, 1, -1, TF_CENTERED, letterE, OP_OPAQUE);
    if ( currentLevel == 156 )
        Screen->DrawString(5, 148, -32, FONT_Z1, 1, -1, TF_CENTERED, letterF, OP_OPAQUE);
    Waitframe();
}

void WaitframeDrawGT(int currentPlayerPositionX, int currentPlayerPositionY, int currentPlayerDirection, int currentPlayer){
    Link->X = currentPlayerPositionX;
    Link->Y = currentPlayerPositionY;
    if ( currentPlayer == 0 ) {
        game2OpeningWipePositionX = currentPlayerPositionX;
        game2OpeningWipePositionY = currentPlayerPositionY;
    }
    if ( currentPlayerDirection == 1 && currentPlayer == 0 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 44, 2, OP_OPAQUE);
    if ( currentPlayerDirection == 2 && currentPlayer == 0 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 45, 2, OP_OPAQUE);
    if ( currentPlayerDirection == 3 && currentPlayer == 0 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 46, 2, OP_OPAQUE);
    if ( currentPlayerDirection == 4 && currentPlayer == 0 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 47, 2, OP_OPAQUE);
    if ( currentPlayerDirection == 1 && currentPlayer == 1 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 376, 2, OP_OPAQUE);
    if ( currentPlayerDirection == 2 && currentPlayer == 1 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 377, 2, OP_OPAQUE);
    if ( currentPlayerDirection == 3 && currentPlayer == 1 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 378, 2, OP_OPAQUE);
    if ( currentPlayerDirection == 4 && currentPlayer == 1 )
        Screen->FastCombo(2, currentPlayerPositionX, currentPlayerPositionY, 379, 2, OP_OPAQUE);

    Screen->DrawInteger(5, 142, -32, FONT_Z1, 1, -1, 0, 0, currentBonusLevel, 0, OP_OPAQUE);
    Waitframe();
}

void RestoreWater(){
    for(int i = 0; i < 175; i++){
        if ( GetLayerComboD(3, i) == 68 || GetLayerComboD(3, i) == 69 )
            SetLayerComboD(3, i, 64);
    }
}

void InvertedCircle(int bitmapID, int layer, int x, int y, int radius, int scale, int fillcolor){
    Screen->SetRenderTarget(bitmapID);     //Set the render target to the bitmap.
    Screen->Rectangle(layer, 0, 0, 256, 176, fillcolor, 1, 0, 0, 0, true, 128); //Cover the screen
    Screen->Circle(layer, x, y, radius, 0, scale, 0, 0, 0, true, 128); //Draw a transparent circle.
    Screen->SetRenderTarget(RT_SCREEN); //Set the render target back to the screen.
    Screen->DrawBitmap(layer, bitmapID, 0, 0, 256, 176, 0, 56, 256, 176, 0, true); //Draw the bitmap
}